import { galleryItems } from './gallery-items.js';
// Change code below this line

// Задание 1 - галерея изображений
// Создай галерею с возможностью клика по её элементам и просмотра полноразмерного изображения в модальном окне.
// Посмотри демо видео работы галереи.

// Выполняй это задание в файлах 01 - gallery.html и 01 - gallery.js.Разбей его на несколько подзадач:

// Создание и рендер разметки по массиву данных galleryItems и предоставленному шаблону элемента галереи.
// Реализация делегирования на div.gallery и получение url большого изображения.
// Подключение скрипта и стилей библиотеки модального окна basicLightbox.Используй CDN сервис jsdelivr 
// и добавь в проект ссылки на минифицированные(.min) файлы библиотеки.
// Открытие модального окна по клику на элементе галереи.Для этого ознакомься с документацией и примерами.
// Замена значения атрибута src элемента < img > в модальном окне перед открытием.
// Используй готовую разметку модального окна с изображением из примеров библиотеки basicLightbox.
// Разметка элемента галереи
// Ссылка на оригинальное изображение должна храниться в data - атрибуте source на элементе < img >,
//  и указываться в href ссылки.Не добавляй другие HTML теги или CSS классы кроме тех, что есть в этом шаблоне.

// < div class="gallery__item" >
//     <a class="gallery__link" href="large-image.jpg">
//         <img
//             class="gallery__image"
//             src="small-image.jpg"
//             data-source="large-image.jpg"
//             alt="Image description"
//         />
//     </a>
// </ >

//Обрати внимание на то, что изображение обернуто в ссылку, а значит при клике по умолчанию пользователь 
// будет перенаправлен на другую страницу.Запрети это поведение по умолчанию.

// Закрытие с клавиатуры
// Добавь закрытие модального окна по нажатию клавиши Escape.Сделай так, чтобы прослушивание клавиатуры 
// было только пока открыто модальное окно.У библиотеки basicLightbox есть метод для программного закрытия модального окна.

/*
Решение
*/

/*
Получаю ссылку на элемент
*/
const galleryRef = document.querySelector(".gallery");

/*
Создание и рендер разметки по массиву данных galleryItems и предоставленному шаблону элемента галереи.
*/
const markup = galleryItems.map(({ preview, original, description }) => {
    return `<div class="gallery__item">
    <a class="gallery__link" href="${original}">
      <img
        class="gallery__image"
        src="${preview}"
        data-source="${original}"
        alt="${description}"
      />
    </a>
  </div>`;
}).join("");

galleryRef.innerHTML = markup;

/*
Вешаю слушатель событий на клик на галерею
*/
galleryRef.addEventListener("click", onClickImagePreview);

function onClickImagePreview(e) {
    e.preventDefault(); //Сбрасываю поведение браузера по умолчанию

    // Если клик происходит не на картинке - функция не выполняется .Для проверки типа элемента использую свойство nodeName
    // (e.target это ссылка на исходный элемент на котором произошло событие, в процессе всплытия он неизменен)
    if (e.target.nodeName !== 'IMG') {
        return;
    }

    // Согласно функционалу подключенной библиотеки basicLightbox создаю новый экземпляр и присваиваю его переменной,
    // в разметку передаю див с картинкой внутри .Картинку беру с текущего элемента из его дата-атрибута

    // вторым аргументом передаю объект опций со свойствами
    // onShow - Функция, которая выполняется перед отображением лайтбокса. Возврат false предотвратит отображение лайтбокса.
    // В ней вешаю слушатель событий на событие клавиатуры keydown на document (назначается коллбэк-функция onModalAddKeydown)
    // onClose - Функция, которая выполняется до закрытия лайтбокса.Возврат false предотвратит закрытие лайтбокса.
    // В ней удаляю слушатель событий на событие клавиатуры keydown на document (назначается коллбэк-функция onModalAddKeydown)

    // и показываю экземпляр лайтбокса

    const instance = basicLightbox.create(
        `<div class="modal"><img src="${e.target.dataset.source}"></div>`,
        {
            onShow: instance => {
                document.addEventListener('keydown', onModalAddKeydown);
            },
            onClose: instance => {
                document.removeEventListener('keydown', onModalAddKeydown);
            },
        }
    );

    instance.show(); // Показываю экземпляр лайтбокса.


    // Свойство code возвращает код физической клавиши на клавиатуре и не изменяется между языками
    // Если code не Escape - ничего не делаю , иначе закрываю экземпляр лайтбокса
    function onModalAddKeydown(e) {
        if (e.code !== "Escape") {
            return;
        } else {
            instance.close(); // Закрываю экземпляр лайтбокса.
        }
    }
}